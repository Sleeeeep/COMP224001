package buyer;

import phone.Phone;

public class CallingPlanRec {

	public CallingPlanRec()
	{
		
	}
	public CallingPlanRec(String message, String call, String data, String price)
	{
		
	}
	public void checkInterval(int offset) // mf -> premium -> display -> storage -> price
	{
		int addcheck = 0;
		while (offset < 10 && addcheck <= 2 && addcheck <= totallist.Get_Total_Phone_List_Size())
		{
			for (int i = 0; addcheck <= 2 && i < totallist.Get_Total_Phone_List_Size(); i++) {
				Phone curPhone = new Phone(totallist.getTotal_phone_list().get(i));
				if (checkManufacture(curPhone))
					if (checkPerformance(curPhone))
						if (checkDisplay(curPhone, offset))
							if (checkStorage(curPhone, offset))
								if (checkPrice(curPhone, offset)) {

									if (recommandlist.contains(curPhone))
										continue;

									recommandlist.add(curPhone);
									addcheck++;
								}
			}
			offset++;
		}

	}

	public Boolean checkManufacture(Phone curPhone) {
		if ("".equals(Manufacture))
			return true;
		else if (curPhone.getMANUFACTURE().equalsIgnoreCase(Manufacture))
			return true;
		else
			return false;
	}

	public Boolean checkDisplay(Phone curPhone, int offset) // +- 0.1 * offset
	{
		if (Display == 0)
			return true;
		double curDisplay = Double.parseDouble(curPhone.getDISPLAY());

		if ((curDisplay >= (Display - (0.1 * offset))) && (curDisplay <= (Display + (0.1 * offset))))
			return true;
		else
			return false;
	}

	public Boolean checkStorage(Phone curPhone, int offset) // += 1 * offset
	{
		if (Storage == 0)
			return true;
		int curStorage = Integer.parseInt(curPhone.getSTORAGE());

		if ((curStorage >= (Storage - (1 * offset))) && (curStorage <= (Storage + (1 * offset))))
			return true;
		else
			return false;
	}

	public Boolean checkPrice(Phone curPhone, int offset) // += 10000 * offset
	{
		if (Price == 0)
			return true;
		int curPrice = Integer.parseInt(curPhone.getPRICE());

		if ((curPrice >= (Price - (10000 * offset))) && (curPrice <= (Price + (10000 * offset))))
			return true;
		else
			return false;
	}

	public Boolean checkPerformance(Phone curPhone) // premium, normal
	{
		if ("".equals(Performance))
			return true;
		if (curPhone.getPERFORMANCE().equalsIgnoreCase(Performance))
			return true;
		else
			return false;
	}
}
